// Markdown-Colors -----------------------------------
$m-text-code: #3b9cff;
$m-text-1: hsl(220, 40%, 90%); // default text
$m-text-2: hsl(220, 9%, 55%);
$m-text-3: hsl(220, 10%, 40%);

$m-cyan: hsl(187, 47%, 55%); // <-cyan
$m-blue: hsl(207, 82%, 66%); // <-blue
$m-purple: hsl(286, 60%, 67%); // <-purple
$m-green: hsl(95, 38%, 62%); // <-green

$m-red: hsl(355, 65%, 65%); // <-red 1
$m-red-2: hsl(5, 48%, 51%); // <-red 2

$m-orange: hsl(29, 54%, 61%); // <-orange 1
$m-orange2: hsl(39, 67%, 69%); // <-orange 2

/*End Markdown Color*/

// text color
$primary-color: #193549; // primary color for all components
$link-color: #1890ff; // link color
$success-color: #52c41a; // success state color
$warning-color: #faad14; // warning state color
$error-color: #f5222d; // error state color
$font-size-base: 14px; // major text font size
$heading-color: rgba(0, 0, 0, 0.85); // heading text color
$text-color: #7e7e7e; // major text color
$text-color-secondary: rgba(0, 0, 0, 0.45); // secondary text color
$disabled-color: rgba(0, 0, 0, 0.25); // disable state color
$border-radius-base: 2px; // major border radius
$border-color-base: #d9d9d9; // major border color
$box-shadow-base: 0 3px 6px -4px rgba(0, 0, 0, 0.12),
  0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // major shadow for layers

$themes: (
  light: (
    textColor: #7e7e7e,
    backgroundColor: #f1f1f1,
    codeColor: #3b9cff,
    codeBackgroundColor: #e8e8e8,
    paginationBackgroundColor: #3b9cff,
    resumeBackgroundColor: #ffff,
  ),
  dark: (
    textColor: #fff,
    backgroundColor: #212121,
    codeColor: #66d9ef,
    codeBackgroundColor: #4e4e4e9c,
    paginationBackgroundColor: #66d9ef,
    resumeBackgroundColor: #4e4e4e9c,
  ),
);

/*
 * Implementation of themes
 */
@mixin themify($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}
